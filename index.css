:root {
	color-scheme: light dark;
	--background-hsl: 216 7% 14%;
	--bar-width: 50px;
	--checker-radius: 20px;
	--checker-diameter: calc(var(--checker-radius) * 2);
	--checker-thickness: 5px;
	--checkers-per-player: 15;
	--die-side-length: 40px;
	--die-gap: 10px;
	--half-width: calc(var(--point-width) * 6);
	--half-height: calc(var(--point-height) * 2 + var(--checker-diameter) * 2 + var(--die-side-length) + 30px);
	--hold-width: var(--checker-diameter);
	--player-1-checker-background: black;
	--player-1-checker-text-color: var(--player-2-checker-background);
	--player-2-checker-background: white;
	--player-2-checker-text-color: var(--player-1-checker-background);
	--point-count: 24;
	--point-per-side: calc(var(--point-count) / 2);
	--point-min: 1;
	--point-max: 24;
	--point-width: var(--checker-diameter);
	--point-height: calc(var(--checker-diameter) * 4);
}

*, ::before, ::after {
	box-sizing: border-box;
}

html {
	font: 16px/1.5 system-ui;
}

body {
	display: flex;
	margin: 0;
	height: 100vb;
}

button {
	cursor: pointer;

	&:disabled {
		cursor: not-allowed;
	}
}

svg {
	background: hsl(var(--background-hsl));
	touch-action: none;
}

#checker-background {
	cx: var(--checker-radius);
	cy: var(--checker-radius);
	r: var(--checker-radius);
}

#hold {
	translate: calc(var(--half-width) * 2 + var(--bar-width) + var(--hold-width) / 2 + 5px);
	width: var(--hold-width);
	height: calc(var(--checkers-per-player) * var(--checker-thickness));
}

.half {
	fill: hsl(29 86% 72%);
	clip-path: fill-box inset(0 round 4px);

	& > rect {
		width: var(--half-width);
		height: var(--half-height);
	}

	.quadrant:last-of-type {
		translate: 0 var(--half-height);
		rotate: x .5turn;
	}

	&:last-of-type {
		translate: calc(var(--half-width) + var(--bar-width));
	}
}

use[href="#point"] {
	fill: var(--fill-color);
	stroke: var(--fill-color);
	translate: calc(var(--point-width) * (var(--child-index) - 1));

	&:nth-child(even) {
		--fill-color: hsl(30 100% 84%);
	}

	&:nth-child(odd) {
		--fill-color: hsl(11 33% 29%);
	}

	&:nth-child(0) {
		--child-index: 0;
	}

	&:nth-child(1) {
		--child-index: 1;
	}

	&:nth-child(2) {
		--child-index: 2;
	}

	&:nth-child(3) {
		--child-index: 3;
	}

	&:nth-child(4) {
		--child-index: 4;
	}

	&:nth-child(5) {
		--child-index: 5;
	}

	&:nth-child(6) {
		--child-index: 6;
	}
}

#drop-points {
	translate: var(--checker-diameter) 16px;
}

/*noinspection CssInvalidFunction*/
use[href="#drop-point"],
#checkers > * {
	/* Returns 1 if the --point is in [1,12], else 0. */
	--is-bottom-point: calc(1 - var(--is-top-point));
	/* Returns 1 if the --point is in [13,24], else 0. */
	--is-top-point: round(down, calc((var(--point) - 1) / var(--point-per-side)), 1);
	/* Returns 1 if the --point is in [1,6] âˆª [19,24], else 0. */
	--is-right-point: round(down, abs(calc((var(--point-max) + var(--point-min)) / 2) - var(--point)) / 6, 1);
	--translate-x:
		calc(
			var(--is-top-point) * (var(--checker-diameter) * rem(var(--point) - 1, var(--point-per-side)))
			+ var(--is-bottom-point) * (2 * var(--half-width) - var(--checker-diameter) * (rem(var(--point) - 1, var(--point-per-side)) + 1))
			+ var(--is-right-point) * var(--bar-width)
		);
}

/*noinspection CssInvalidFunction*/
use[href="#drop-point"] {
	translate:
		var(--translate-x)
		calc(
			var(--is-bottom-point) * (var(--half-height) + 28px)
		);
}

use[href="#hold"] {
	background: hsl(216 7% 20%);

	&:first-of-type {
		y: calc(.25 * var(--half-height));
	}

	&:last-of-type {
		y: calc(.75 * var(--half-height));
	}
}

/*noinspection CssInvalidFunction*/
#checkers > * {
	transition: translate .3s;
	--top-point-translate-y: calc(var(--checker-diameter) * min(var(--point-stack-index), ((5 - 1) * var(--point-stack-index)) / max(var(--point-stack-count) - 1, 1)));
	--bottom-point-translate-y: calc((var(--half-height) - var(--top-point-translate-y) - var(--checker-diameter)));
	translate:
		var(--translate-x)
		calc(
			var(--is-top-point) * var(--top-point-translate-y)
			+ var(--is-bottom-point) * var(--bottom-point-translate-y)
		);

	--top-point-mask-position-vertical: calc(150% + -1 * round(down, calc(var(--point-stack-count) / 6), 1) * (1 - round(down, calc((var(--point-stack-index) + 1) / var(--point-stack-count)), 1)) * (105% - ((4 / max(var(--point-stack-count) - 1, 1)) * 100%)));
	--bottom-point-mask-position-vertical: calc(100% - var(--top-point-mask-position-vertical));
	mask-image:
		radial-gradient(
			black var(--checker-radius),
			transparent var(--checker-radius)
		),
		radial-gradient(
			circle at center calc(var(--is-top-point) * var(--top-point-mask-position-vertical) + var(--is-bottom-point) * var(--bottom-point-mask-position-vertical)),
			black var(--checker-radius),
			transparent var(--checker-radius)
		);
	mask-composite: subtract;

	&[data-permissible-destination-points]:not([data-permissible-destination-points="[]"]) {
		&:hover {
			cursor: pointer;
		}

		&.dragging {
			transition: filter .3s;
			cursor: move;
			filter: drop-shadow(2px 4px 4px hsl(var(--background-hsl) / .3));
		}
	}

	&[data-permissible-destination-points="[]"]:hover {
		cursor: not-allowed;
	}

	&[data-player="1"] {
		fill: var(--player-1-checker-background);
		color: var(--player-1-checker-text-color);
	}

	&[data-player="2"] {
		fill: var(--player-2-checker-background);
		color: var(--player-2-checker-text-color);
	}

	& > text {
		fill: currentColor;
		font-weight: bold;
		font-size: 18px;
		user-select: none;
		dominant-baseline: central;
		text-anchor: middle;
	}
}

#die-face-background {
	width: var(--die-side-length);
	height: var(--die-side-length);
}

.die-pip {
	r: 4px;
	fill: white;

	&.x0 {
		cx: calc(var(--die-side-length) * .25);
	}

	&.x1 {
		cx: calc(var(--die-side-length) * .5);
	}

	&.x2 {
		cx: calc(var(--die-side-length) * .75);
	}

	&.y0 {
		cy: calc(var(--die-side-length) * .25);
	}

	&.y1 {
		cy: calc(var(--die-side-length) * .5);
	}

	&.y2 {
		cy: calc(var(--die-side-length) * .75);
	}
}

foreignObject {
	--height: 40px;
	width: var(--half-width);
	height: var(--height);
	y: calc(var(--half-height) / 2 - var(--height) / 2);

	&:first-of-type {
		x: 0;
	}

	&:last-of-type {
		x: calc(var(--half-width) + var(--bar-width));
	}

	& > div {
		width: 100%;
		height: 100%;
		display: flex;
		justify-content: center;
		align-items: center;
		gap: 8px;
	}
}

#dice {
	--width: calc(2 * var(--die-side-length) + var(--die-gap));
	--height: var(--die-side-length);
	translate: calc(var(--half-width) * 1.5 + var(--bar-width) - var(--width) / 2) calc(var(--half-height) / 2 - var(--height) / 2);
}

#confirm {
	--background-hsl: 149 83% 28%;
}

#confirm,
#undo,
#roll-dice {
	height: 100%;
	font-weight: bold;
	font-size: 1rem;
	padding-inline: 20px;
	border: none;
	border-radius: 4px;
	--alpha: 1;
	background: hsl(var(--background-hsl) / var(--alpha));
	color: hsl(0 0% 100% / var(--alpha));

	&:disabled {
		--alpha: .5;
	}
}

#confirm,
#undo {
	display: none;
}

#dice {
	:nth-child(1):nth-last-child(4),
	:nth-child(2):nth-last-child(3) {
		transition: translate .4s;
	}

	:nth-child(2):last-child {
		translate: calc(var(--die-side-length) + var(--die-gap));
	}

	:nth-child(1):nth-last-child(4) {
		translate: calc(-1 * (var(--die-side-length) + var(--die-gap)));
	}

	:nth-child(2):nth-last-child(3) {
		translate: 0;
	}

	:nth-child(3):nth-last-child(2) {
		translate: calc(var(--die-side-length) + var(--die-gap));
	}

	:nth-child(4):nth-last-child(1) {
		translate: calc(2 * (var(--die-side-length) + var(--die-gap)));
	}

	:nth-child(3):nth-last-child(2),
	:nth-child(4):nth-last-child(1) {
		animation: .2s .3125s 1 backwards fade-in;
	}
}

@keyframes fade-in {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

.die[data-played-at] {
	opacity: .5;
}
