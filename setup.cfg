[bdist_wheel]
; universal = 1

[metadata]
# name = WsgiDAV  # GitHub dependants needs it in setup.py?
version = attr: wsgidav.__version__
author = Martin Wendt
author_email = wsgidav@wwwendt.de
maintainer = Martin Wendt
maintainer_email = wsgidav@wwwendt.de
url = https://github.com/mar10/wsgidav
project_urls =
    Bug Tracker = https://github.com/mar10/wsgidav/issues
    Source Code = https://github.com/mar10/wsgidav
    Documentation = https://wsgidav.readthedocs.io
    Download = https://github.com/mar10/wsgidav/releases/latest
    Discussions = https://github.com/mar10/wsgidav/discussions

description = Generic and extendable WebDAV server based on WSGI
long_description = file: README.md
long_description_content_type = text/markdown
keywords = web, wsgi, webdav, application, server
license = MIT
license_files = LICENSE
classifiers =
    # Development Status :: 3 - Alpha
    # Development Status :: 4 - Beta
    Development Status :: 5 - Production/Stable
    Environment :: Console
    Intended Audience :: Developers
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    # NOTE: See also wsgidav_app.MIN_PYTHON_VERSION_INFO
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Internet :: WWW/HTTP
    Topic :: Internet :: WWW/HTTP :: HTTP Servers
    Topic :: Internet :: WWW/HTTP :: Dynamic Content
    Topic :: Internet :: WWW/HTTP :: WSGI
    Topic :: Internet :: WWW/HTTP :: WSGI :: Application
    Topic :: Internet :: WWW/HTTP :: WSGI :: Server
    Topic :: Software Development :: Libraries :: Python Modules

[options]
package_dir =
    = .
packages = find:
zip_safe = False

# scripts =
#   bin/first.py
#   bin/second.py

install_requires =
    defusedxml
    Jinja2
    json5
    PyYAML

[options.extras_require]
pam = python-pam

[options.packages.find]
where = .
include_package_data = True
exclude =
    tests


[options.package_data]
# * =
# 	CHANGELOG.md
wsgidav = 
	dir_browser/htdocs/*.*


[options.data_files]
. = CHANGELOG.md


[options.entry_points]
console_scripts =
    wsgidav = wsgidav.server.server_cli:run


[check-manifest]
ignore =
    docs/sphinx-build
    docs/sphinx-build/*

[aliases]
# TODO: this breaks 'setup.py test' which is ought to run the Tox-command:
#test = pytest

# isort is configured in pyproject.toml: [tool.isort]
# [isort]

# --- Coverage Settings --------------------------------------------------------

[coverage:run]
branch = True
omit =
    tests/*
    wsgidav/prop_man/couch_property_manager.py
    wsgidav/prop_man/mongo_property_manager.py
    wsgidav/samples/*
    wsgidav/server/run_reloading_server.py
    wsgidav/server/server_sample.py

[coverage:report]
precision = 2
; show_missing = True
sort = Name
exclude_lines =
    pragma: no cover
    if __name__ == .__main__.:

[coverage:html]
directory = build/coverage

# --- PyTest Settings ----------------------------------------------------------

[tool:pytest]
addopts =
testpaths =
    .
    tests

# --- Flake8 Settings ----------------------------------------------------------

[flake8]
# G: enable 'flake8-logging-format'
enable-extensions = G

exclude =
    __pycache__,
    .cache,
    .eggs,
    .git,
    .tox,
    .vscode,
    build,
    dist,
    docs

max-line-length = 99
# max-line-length = 88

# 'mccabe' plugin:
# max-complexity = 12

# max-annotations-complexity = 10
# max-expression-complexity = 10

# Ignore some errors that may be created by Black:
#   - E203 whitespace before ':'
#   - E501 line too long
#   - W503 line break before binary operator
#   - P101 format string does contain unindexed parameters
#   - W605 invalid escape sequence '\/' (we want to allow ascii-art)
#   - A003 class attribute "open" is shadowing a python builtin
#   - N806 variable 'VAR_NAME' in function should be lowercase
#   - B028 'STR' is manually surrounded by quotes, consider using the `!r` conversion flag.
ignore = E203, E501, W503, P101, A003, N806, W605

# Instead of strict E501, enable B950 for relaxed line length checking (and other bugbear warnings)
# select = B,C,D,E,F,I,N,P,PT,Q,S,T,W,B9

#
docstring-convention = all  # google?

# Options for the flake8-quotes extension:
inline-quotes = double
multiline-quotes = """
docstring-quotes = """
avoid-escape = True
